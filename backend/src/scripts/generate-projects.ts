import { ProjectModel } from '../models/ProjectModel';
import connectDB from '../config/database';

const projectNames = [
  'Sistema de Gest√£o Empresarial',
  'App Mobile de Delivery',
  'Portal de E-commerce',
  'Sistema de CRM',
  'Plataforma de Streaming',
  'Sistema de Gest√£o Hospitalar',
  'App de Controle Financeiro',
  'Portal de Not√≠cias',
  'Sistema de Gest√£o Educacional',
  'App de Rede Social',
  'Sistema de Gest√£o de Estoque',
  'Portal de Turismo',
  'App de Fitness',
  'Sistema de Gest√£o de Projetos',
  'Portal de Im√≥veis',
  'Sistema de Gest√£o de RH',
  'App de Transporte',
  'Sistema de Gest√£o de Vendas',
  'Portal de Cursos Online',
  'App de M√∫sica',
  'Sistema de Biblioteca',
  'Portal de Eventos',
  'App de Receitas',
  'Sistema de Gest√£o de Clientes',
  'Portal de Freelancers',
  'App de Medita√ß√£o',
  'Sistema de Gest√£o de Tarefas',
  'Portal de Classificados',
  'App de Clima',
  'Sistema de Gest√£o de Documentos',
  'Portal de Sa√∫de',
  'App de Jogos',
  'Sistema de Gest√£o de Contratos',
  'Portal de Investimentos',
  'App de Mapas',
  'Sistema de Gest√£o de Qualidade',
  'Portal de Arte',
  'App de Comunica√ß√£o',
  'Sistema de Gest√£o de Ativos',
  'Portal de Tecnologia',
  'App de Produtividade',
  'Sistema de Gest√£o de Recursos',
  'Portal de Entretenimento',
  'App de Compras',
  'Sistema de Gest√£o de Processos',
  'Portal de Ci√™ncia',
  'App de Utilidades',
  'Sistema de Gest√£o de Seguran√ßa',
  'Portal de Cultura',
  'App de Neg√≥cios'
];

const clients = [
  'Empresa Alpha Ltda',
  'Beta Solutions',
  'Gamma Tech',
  'Delta Corp',
  'Epsilon Digital',
  'Zeta Systems',
  'Eta Consulting',
  'Theta Group',
  'Iota Ventures',
  'Kappa Industries',
  'Lambda Labs',
  'Mu Enterprises',
  'Nu Technologies',
  'Xi Innovations',
  'Omicron Holdings',
  'Pi Dynamics',
  'Rho Partners',
  'Sigma Solutions',
  'Tau Technologies',
  'Upsilon Systems',
  'Phi Consulting',
  'Chi Development',
  'Psi Group',
  'Omega Corporation',
  'Acme Industries'
];

function randomDate(start: Date, end: Date): Date {
  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));
}

function getRandomElement<T>(array: T[]): T {
  return array[Math.floor(Math.random() * array.length)];
}

async function generateProjects() {
  try {
    console.log('Conectando ao banco de dados...');
    await connectDB();
    console.log('Conectado com sucesso!');

    console.log('Gerando 50 projetos de teste...');
    
    const projects = [];
    
    for (let i = 0; i < 50; i++) {
      const startDate = randomDate(new Date(2023, 0, 1), new Date(2024, 11, 31));
      const endDate = randomDate(startDate, new Date(2025, 11, 31));
      
      const project = {
        name: projectNames[i],
        client: getRandomElement(clients),
        startDate,
        endDate,
        isFavorite: Math.random() > 0.7, // 30% de chance de ser favorito
        coverImage: undefined // Sem imagem de capa para simplificar
      };
      
      projects.push(project);
    }

    // Inserir todos os projetos
    const result = await ProjectModel.insertMany(projects);
    console.log(`‚úÖ ${result.length} projetos criados com sucesso!`);

    // Mostrar alguns exemplos
    console.log('\nüìã Alguns projetos criados:');
    result.slice(0, 5).forEach((project, index) => {
      console.log(`${index + 1}. ${project.name} - ${project.client}`);
    });

    console.log('\nüéØ Pronto! Agora voc√™ pode testar a exclus√£o no frontend.');
    
  } catch (error) {
    console.error('‚ùå Erro ao gerar projetos:', error);
  } finally {
    process.exit(0);
  }
}

generateProjects();
